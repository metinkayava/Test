<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testsuite errors="0" failures="1" name="io.cucumber.core.plugin.JUnitFormatter" skipped="0" tests="15" time="4.213">
    <testcase classname="Get future rates" name="Actor calls Exchange rates API to get future foreign exchange reference rates." time="2.085">
        <failure message="1 expectation failed.&#10;JSON path date doesn't match.&#10;Expected: 2020-06-17&#10;  Actual: 2020-06-16&#10;" type="java.lang.AssertionError">
            <![CDATA[When an actor requests for future rates.....................................passed
Then the response status code is 200........................................passed
And the response date is the current date...................................failed

StackTrace:
java.lang.AssertionError: 1 expectation failed.
JSON path date doesn't match.
Expected: 2020-06-17
  Actual: 2020-06-16

	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
	at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
	at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
	at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
	at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
	at com.hsbc.gcmb.stepdefs.FutureRateStepDefinitions.lambda$new$1(FutureRateStepDefinitions.java:37)
	at âœ½.the response date is the current date(classpath:features/GetFutureRates.feature:8)
]]>
        </failure>
    </testcase>
    <testcase classname="Get historical rates" name="Actor calls Exchange rates API to get historical foreign exchange reference rates." time="0.105">
        <system-out>
            <![CDATA[When an actor requests historical rates for "2010-01-12"....................passed
Then the response status code is 200........................................passed
And the default response for the historical rates for "2010-01-12" should be in the correct format.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get historical rates" name="Actor calls Exchange rates API to get specific historical foreign exchange reference rates." time="0.101">
        <system-out>
            <![CDATA[When an actor requests historical rates for "2010-01-12" for currencies:....passed
Then the response status code is 200........................................passed
And the default response for the historical rates for "2010-01-12" with currencies "USD,GBP" should be in the correct format.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get historical rates" name="Actor calls Exchange rates API to get historical foreign exchange reference" time="0.089">
        <system-out>
            <![CDATA[When an actor requests historical rates for "2010-01-12" with base currency "USD".passed
Then the response status code is 200........................................passed
And the response for a base currency of "USD" for historical rates for "2010-01-12" for all currencies should be in the correct format.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get historical rates" name="Actor calls Exchange rates API to get specific historical foreign exchange reference rates against a non default base currency." time="0.08">
        <system-out>
            <![CDATA[When an actor requests historical rates for "2010-01-12" with base currency "USD" for currencies:.passed
Then the response status code is 200........................................passed
And the response for a base currency of "USD" for historical rates for "2010-01-12" with currencies "GBP" should be in the correct format.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get historical rates" name="Actor calls Exchange rates API to get historical foreign exchange reference rates, using an invalid date." time="0.089">
        <system-out>
            <![CDATA[When an actor requests historical rates for "2020-13-12" with base currency "USD".passed
Then the response status code is 400........................................passed
And the response is:........................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get historical rates" name="Actor calls Exchange rates API to get historical foreign exchange reference rates, for an unsupported base currency." time="0.091">
        <system-out>
            <![CDATA[When an actor requests historical rates for "2010-01-12" with base currency "UDD".passed
Then the response status code is 400........................................passed
And the response is:........................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get historical rates" name="Actor calls Exchange rates API to get historical foreign exchange reference rates, for an unsupported currency." time="0.078">
        <system-out>
            <![CDATA[When an actor requests historical rates for "2010-01-12" with base currency "USD" for currencies:.passed
Then the response status code is 400........................................passed
And the response is:........................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get historical rates" name="Actor calls Exchange rates API to get historical rates with a date that is too old." time="0.079">
        <system-out>
            <![CDATA[When an actor requests historical rates for "1999-01-03"....................passed
Then the response status code is 400........................................passed
And the response is:........................................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get historical rates" name="Actor calls Exchange rates API to get historical rates with date 1999-01-04." time="0.086">
        <system-out>
            <![CDATA[When an actor requests historical rates for "1999-01-04"....................passed
Then the response status code is 200........................................passed
And the default response for the historical rates for "1999-01-04" should be in the correct format.passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get latest date rates" name="Actor calls Exchange rates API to get the latest foreign exchange reference rates." time="0.566">
        <system-out>
            <![CDATA[When an actor requests for the latest rates.................................passed
Then the response status code is 200........................................passed
And the default response for the latest rates should be in the correct format.passed
And the response base currency is "EUR".....................................passed
And the response date is in a valid format..................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get latest date rates" name="Actor calls Exchange rates API to get the latest specific foreign exchange reference rates." time="0.101">
        <system-out>
            <![CDATA[When an actor requests the latest rates for:................................passed
Then the response status code is 200........................................passed
And the default response for the latest rates should be in the correct format for:.passed
And the response base currency is "EUR".....................................passed
And the response date is in a valid format..................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get latest date rates" name="Actor calls Exchange rates API to get the latest foreign exchange reference rates against a non default base currency." time="0.117">
        <system-out>
            <![CDATA[When an actor requests the latest rates for base currency "USD".............passed
Then the response status code is 200........................................passed
And the response for a base currency of "USD" should be in the correct format.passed
And the response base currency is "USD".....................................passed
And the response date is in a valid format..................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get latest date rates" name="Actor calls Exchange rates API to get the latest specific foreign exchange reference rates against a non default base currency." time="0.128">
        <system-out>
            <![CDATA[When an actor requests the latest rates for base currency "USD" for:........passed
Then the response status code is 200........................................passed
And the response for a base currency of "USD" should be in the correct format for:.passed
And the response base currency is "USD".....................................passed
And the response date is in a valid format..................................passed
]]>
        </system-out>
    </testcase>
    <testcase classname="Get latest date rates" name="Actor calls Exchange rates API with an unsupported base currency." time="0.107">
        <system-out>
            <![CDATA[When an actor requests the latest rates for base currency "UDD".............passed
Then the response status code is 400........................................passed
Then the response is:.......................................................passed
]]>
        </system-out>
    </testcase>
</testsuite>
